===============================
        Integer valid
===============================

Hi:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Lol:
    >>> BG = __import__("7-base_geometry").BaseGeometry

    >>> m = __import__("7-base_geometry").__doc__
    >>> len(m) > 1
    True

    >>> c = __import__("7-base_geometry").BaseGeometry.__doc__
    >>> len(c) > 1
    True

	>>> mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
	>>> len(mod1) > 1
	True
	>>> mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
    >>> len(mod2) > 1
    True

Now we try simple things:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)
    
    >>> bg.integer_validator("my_int", 90)

    >>> bg.integer_validator("my_int", 0)
    Traceback (most recent call last):
    ...
    ValueError: my_int must be greater than 0
    
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

    bg.area("hi")
    Traceback (most recent call last):
    ...
    Exception: BaseGeometry().area takes 1 positional argument but 2 were given

    >>> bg.integer_validator("string", "amr")
    Traceback (most recent call last):
    ...
    TypeError: string must be an integer

    >>> bg.integer_validator("list", [1, 2])
    Traceback (most recent call last):
    ...
    TypeError: list must be an integer

    >>> bg.integer_validator("bool", True)
    Traceback (most recent call last):
    ...
    TypeError: bool must be an integer

    >>> bg.integer_validator("float", 0.5)
    Traceback (most recent call last):
    ...
    TypeError: float must be an integer

    >>> bg.integer_validator("tuple", (5, 3))
    Traceback (most recent call last):
    ...
    TypeError: tuple must be an integer

    >>> bg.integer_validator("myDic", {"hi": 5})
    Traceback (most recent call last):
    ...
    TypeError: myDic must be an integer

Checking for no arguments to integer_validator:
    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

Checking for only 1 argument to integer_validator:
    >>> bg.integer_validator("integer")
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

Checking for too many arguments:
    >>> bg.integer_validator("integer", 1, 2)
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 4 were given
