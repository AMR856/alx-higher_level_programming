===============================
add_integer_function tests
===============================

First we import the function:
    >>> add_integer = __import__('0-add_integer').add_integer

Checking for normal numbers:
    >>> print(add_integer(1, 2))
    3

    >>> print(add_integer(100, -2))
    98

    >>> print(add_integer(2))
    100

    >>> print(add_integer(100.3, -2))
    98

Checking for exceptions:
    >>> print(add_integer(4, "School"))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> print(add_integer(True, 5))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer(1, -5 ,3))
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    >>> print(add_integer(None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer(float('nan'), 5))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    >>> print(add_integer(5, float('nan')))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    >>> print(add_integer(5, float('inf')))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    >>> print(add_integer(float('inf'), 5))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
