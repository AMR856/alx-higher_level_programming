===============================
Matrix Division Function Tests
===============================

First we import the function:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Second we get the matrix:
    >>> matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]]

Checking The normal state:
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Checking zero division:
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Checking divison with non-number:
    >>> matrix_divided(matrix, "School")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Checking matrix of non integer:
    >>> matrix = [
    ... [1, 2, "School"],
    ... [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking matrix of different row sizes:
    >>> matrix = [
    ... [1, 2, "School", 5, 2],
    ... [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Checking condition of lower paramters:
    >>> matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]]

    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> print(matrix_divided(3, 5))
    Traceback (most recent call last):
    ...
    TypeError: 'int' object is not subscriptable
